version: '3'
services:
  grafana:
    image: grafana/grafana
    container_name: myop-grafana-dashboard
    ports:
            - ${GRAFANA_PORT:-3000}:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana_dashboards:/var/lib/grafana/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - monitoring

  statsd-exporter:
    image: prom/statsd-exporter
    ports:
      - ${STATSD_PORT_WEB:-9102}:9102
      - ${STATSD_PORT_TCP:-9125}:9125
      - ${STATSD_PORT_UDP:-9125}:9125/udp
    command: --statsd.mapping-config=/tmp/statsd_mapping.yml --log.level="debug"

    volumes:
      - ./statsd/statsd_mapping.yml:/tmp/statsd_mapping.yml
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - ${PROMETHEUS_PORT:-9090}:9090
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - ${ALERTMANAGER_PORT:-9093}:9093
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - monitoring

volumes:
    grafana_data: {}
    prometheus_data: {}

networks:
    monitoring: {}
